COMPILE_TARGET = "debug"
require "BuildUtils.rb"

include FileTest

require 'rubygems'

gem 'rubyzip'
require 'zip/zip'
require 'zip/zipfilesystem'

RESULTS_DIR = "results"
BUILD_NUMBER = "0.1.0."
PRODUCT = "FluentMvc"
COPYRIGHT = 'Copyright 2009 Chris Canal.';
COMMON_ASSEMBLY_INFO = 'src/CommonAssemblyInfo.cs';
CLR_VERSION = "v4.0"
SOLUTION_FILENAME = "FluentMvc.sln";

versionNumber = ENV["BUILD_NUMBER"].nil? ? 0 : ENV["BUILD_NUMBER"]

props = { :archive => "/build" }
BUILD_PATH = Dir.getwd + props[:archive]

desc "Compiles and runs tests"
task :all => [:default]

desc "**Default**, compiles and runs tests"
task :default => [:compile, :unit_test]

desc "Displays a list of tasks"
task :help do
  taskHash = Hash[*(`rake.cmd -T`.split(/\n/).collect { |l| l.match(/rake (\S+)\s+\#\s(.+)/).to_a }.collect { |l| [l[1], l[2]] }).flatten] 
 
  indent = "                          "
  
  puts "rake #{indent}#Runs the 'default' task"
  
  taskHash.each_pair do |key, value|
    if key.nil?  
      nexts
    end
    puts "rake #{key}#{indent.slice(0, indent.length - key.length)}##{value}"
  end
end

desc "Update the version information for the build"
task :version do
  #builder = AsmInfoBuilder.new(BUILD_NUMBER, {'Product' => PRODUCT, 'Copyright' => COPYRIGHT})
  #buildNumber = builder.buildnumber
  #puts "The build number is #{buildNumber}"
  #builder.write COMMON_ASSEMBLY_INFO  
end

desc "Prepares the working directory for a new build"
task :clean do
	#TODO: do any other tasks required to clean/prepare the working directory
	Dir.mkdir props[:archive] unless exists?(props[:archive])
end

desc "Compiles the app"
task :compile => [:clean, :version] do
  MSBuildRunner.compile :compilemode => COMPILE_TARGET, :solutionfile => "src/#{SOLUTION_FILENAME}", :clrversion => CLR_VERSION, :outputpath => BUILD_PATH
end

desc "Runs unit tests"
task :unit_test => :compile do
  runner = NUnitRunner.new :compilemode => COMPILE_TARGET, :source => 'src', :platform => nil
  runner.executeTests ['FluentMvc.Spec']  
end